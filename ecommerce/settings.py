"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
#Imports pathlib and os modules, allowing the application access to files within the project directory
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



#The secret key used for cryptographic functions and security measures. 
#Note that in a production environment, the developer would store the secret key as an environmental variable on the production server.
#However, the author decided this was beyond the scope of the project
SECRET_KEY = 'django-insecure-_w!p&iv=x4yd3as7g(0pu^88s2c$cgi32@ec(9aurkl&rreb3f'

#Sets the DEBUG setting to true. In production this would be False, however as the author wanted to read the error messages during the tests, it remained True
DEBUG = True

#Host Header Validation
ALLOWED_HOSTS = ["127.0.0.1", "10.0.2.4"]

#Security Settings that enforce SSL (HTTPS) and secure cookies
SSL_DIR = ['ecommerce']
SSL_CERTIFICATE = ['mysite.crt']
SSL_PRIVATE_KEY = ['mysite.key']
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_BROWSER_XSS_FILTER = True

# Application list within the Django Project
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store.apps.StoreConfig',
    'crispy_forms',
    'crispy_bootstrap5'
]

#Defines list of middleware components that process requests and responses, including security related middleware, session handling, CSRF protection and authentication
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

#Specifies URL Configuration for project, and points towards urls.py within the ecommerce app for relevant URLs
ROOT_URLCONF = 'ecommerce.urls'

#Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#WSGI Configuration
WSGI_APPLICATION = 'ecommerce.wsgi.application'


#Configures the database for the project, located in the base directory of the project 
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')
MEDIA_URL = '/images/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_TEMPLATE_PACK="bootstrap5"

LOGIN_REDIRECT_URL="/"
LOGOUT_REDIRECT_URL="/"

